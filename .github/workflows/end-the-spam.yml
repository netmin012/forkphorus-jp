name: Close spam issues

on:
  issues:
    types: [opened]

jobs:
  end-the-spam:
    if: contains(github.event.issue.body, 'educationroomlearning.web.app')
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Close issue
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "educationroomlearning.web.app broken"
            });
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: [
                "<h1>You are the 55th person reporting this issue to us. We can't fix it for you. Errors on educationroomlearning.web.app are not our fault. Only the creators of educationroomlearning.web.app can fix it.</h1>",
                "<h1>You must ask them to fix it in their Discord server: <a href=\"https://discord.gg/sZcqFyKCXZ\">https://discord.gg/sZcqFyKCXZ</a></h1>",
                "<h1>Send along this message to help them fix it:</h1>",
                "",
                "```",
                "14 games on educationroomlearning.web.app are broken due to Scratch API changes.",
                "Good news: The bug was fixed a year ago! You just need to replace all the files at `https://educationroomlearning.web.app/games/sl/` with the latest version of forkphorus from <https://github.com/forkphorus/forkphorus>",
                "That's it -- all the games will then just work as they should.",
                "```",
                "",
                "@ultimatemen"
              ].join("\n")
            });
            await github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "closed",
              state_reason: "not_planned",
              labels: ["invalid"],
            });
            await github.rest.issues.lock({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              lock_reason: "spam"
            });
